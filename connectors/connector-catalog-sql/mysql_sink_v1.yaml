apiVersion: "sco1237896.github.com/v1"
kind: "ConnectorDefinition"
metadata:
  name: "mysql_sink_v1"
spec:
  definition:
    apiVersion: "camel.apache.org/v1"
    kind: "Pipe"
    metadata:
      annotations:
        sco1237896.github.com/catalog.group: "sql"
        sco1237896.github.com/catalog.id: "mysql"
        sco1237896.github.com/connector.description: "Send data to a MySQL Database."
        sco1237896.github.com/connector.group: "sql"
        sco1237896.github.com/connector.id: "mysql_sink_v1"
        sco1237896.github.com/connector.title: "MySQL sink"
        sco1237896.github.com/connector.version: "v1"
        trait.camel.apache.org/container.request-cpu: "0.20"
        trait.camel.apache.org/container.request-memory: "128M"
        trait.camel.apache.org/deployment.progress-deadline-seconds: "30"
        trait.camel.apache.org/container.image: "quay.io/sco1237896/connector-mysql:main-17140b59c01c7dd0a2d657dfcbf5c346ff4a6705"
    spec:
      errorHandler:
        log: {}
      sink:
        ref:
          apiVersion: "camel.apache.org/v1"
          kind: "Kamelet"
          name: "connector-mysql-sink"
      source:
        ref:
          apiVersion: "camel.apache.org/v1"
          kind: "Kamelet"
          name: "connector-kafka-source"
  resources:
  - apiVersion: "camel.apache.org/v1alpha1"
    kind: "Kamelet"
    metadata:
      name: "connector-kafka-source"
    spec:
      definition:
        title: "Managed Kafka Source"
        description: "Receive data from Managed Kafka topics."
        required:
        - "topic"
        - "bootstrapServers"
        type: "object"
        properties:
          topic:
            title: "Topic Names"
            description: "A comma-separated list of Kafka topic names."
            type: "string"
          bootstrapServers:
            title: "Bootstrap Servers"
            description: "Comma separated list of Kafka Broker URLs"
            type: "string"
          securityProtocol:
            title: "Security Protocol"
            description: "Protocol used to communicate with brokers. SASL_PLAINTEXT,\
              \ PLAINTEXT, SASL_SSL and SSL are supported"
            type: "string"
          saslMechanism:
            title: "SASL Mechanism"
            description: "The Simple Authentication and Security Layer (SASL) Mechanism\
              \ used."
            type: "string"
          user:
            title: "Username"
            description: "Username to authenticate to Kafka"
            type: "string"
            x-descriptors:
            - "urn:camel:group:credentials"
          password:
            title: "Password"
            description: "Password to authenticate to kafka"
            type: "string"
            format: "password"
            x-descriptors:
            - "urn:alm:descriptor:com.tectonic.ui:password"
            - "urn:camel:group:credentials"
  - apiVersion: "camel.apache.org/v1alpha1"
    kind: "Kamelet"
    metadata:
      name: "connector-mysql-sink"
    spec:
      definition:
        title: "MySQL Sink"
        description: |-
          Send data to a MySQL Database.

          In your KameletBinding file, you must explicitly declare the SQL Server driver dependency in spec->integration->dependencies.

          - "mvn:mysql:mysql-connector-java:<version>"

          This Kamelet expects a JSON-formatted body. Use key:value pairs to map the JSON fields and parameters. For example, here is a query:

          'INSERT INTO accounts (username,city) VALUES (:#username,:#city)'

          Here is example input for the example query:

          '{ "username":"oscerd", "city":"Rome"}'
        required:
        - "serverName"
        - "username"
        - "password"
        - "query"
        - "databaseName"
        type: "object"
        properties:
          serverName:
            title: "Server Name"
            description: "The server name for the data source."
            type: "string"
            example: "localhost"
          serverPort:
            title: "Server Port"
            description: "The server port for the data source."
            type: "string"
            default: 3306
          username:
            title: "Username"
            description: "The username to access a secured MySQL Database."
            type: "string"
            x-descriptors:
            - "urn:camel:group:credentials"
          password:
            title: "Password"
            description: "The password to access a secured MySQL Database."
            type: "string"
            format: "password"
            x-descriptors:
            - "urn:alm:descriptor:com.tectonic.ui:password"
            - "urn:camel:group:credentials"
          query:
            title: "Query"
            description: "The query to execute against the MySQL Database."
            type: "string"
            example: "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
          databaseName:
            title: "Database Name"
            description: "The name of the MySQL Database."
            type: "string"
      types:
        in:
          mediaType: "application/json"
